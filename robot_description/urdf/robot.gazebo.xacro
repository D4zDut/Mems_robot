<?xml version="1.0"?>
<robot name="robot_sim" xmlns:xacro="http://ros.org/wiki/xacro">

    <!-- Arguments -->
    <xacro:arg name="laser_visual"          default="false"/>
    <xacro:arg name="imu_visual"            default="false"/>

    <!-- <xacro:arg name="robot_namespace"       default="$(optenv ROBOT_NAMESPACE /)" /> -->
    <!-- Base link-->
    <!-- <gazebo reference="base_link">
        <material>Gazebo/White</material>
    </gazebo> -->

    <!-- Casters -->
    <gazebo reference="caster_left_wheel">
        <mu1>0.001</mu1>
        <mu2>0.001</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <material>Gazebo/FlatBlack</material>
    </gazebo>

    <gazebo reference="caster_right_wheel">
        <mu1>0.001</mu1>
        <mu2>0.001</mu2>
        <kp>1000000.0</kp>
        <kd>100.0</kd>
        <minDepth>0.001</minDepth>
        <material>Gazebo/FlatBlack</material>
    </gazebo>

    <!-- Wheels -->
    <gazebo reference="front_left_wheel">
        <mu1>1.0</mu1>
        <mu2>10.0</mu2>
        <kp>700000.0</kp>
        <kd>3500.0</kd>
        <minDepth>0.001</minDepth>
        <fdir1>1 0 0</fdir1>
        <material>Gazebo/Grey</material>
    </gazebo>

    <gazebo reference="front_right_wheel">
        <mu1>1.0</mu1>
        <mu2>10.0</mu2>
        <kp>700000.0</kp>
        <kd>3500.0</kd>
        <minDepth>0.001</minDepth>
        <fdir1>1 0 0</fdir1>
        <material>Gazebo/Grey</material>
    </gazebo>

    <!-- Controller -->
    <gazebo>
        <plugin name="diff_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <!-- Plugin update rate in Hz -->
            <updateRate>40</updateRate>

            <!-- Name of left joint, defaults to `left_joint` -->
            <leftJoint>wheel_left_joint</leftJoint>

            <!-- Name of right joint, defaults to `right_joint` -->
            <rightJoint>wheel_right_joint</rightJoint>

            <!-- The distance from the center of one wheel to the other, in meters, defaults to 0.34 m -->
            <wheelSeparation>${wheelDist}</wheelSeparation>

            <!-- Diameter of the wheels, in meters, defaults to 0.15 m -->
            <wheelDiameter>${2*wheelRadius}</wheelDiameter>

            <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
            <wheelAcceleration>1</wheelAcceleration>

            <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
            <wheelTorque>50</wheelTorque>

            <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
            <commandTopic>cmd_vel</commandTopic>

            <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
            <odometryTopic>odom</odometryTopic>

            <!-- Odometry frame, defaults to `odom` -->
            <odometryFrame>odom</odometryFrame>

            <!-- Robot frame to calculate odometry from, defaults to `base_footprint` -->
            <robotBaseFrame>base_footprint</robotBaseFrame>

            <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
            <odometrySource>encoder</odometrySource>

            <!-- Set to true to publish transforms for the wheel links, defaults to false -->
            <publishWheelTF>false</publishWheelTF>

            <!-- Set to true to publish transforms for the odometry, defaults to true -->
            <publishOdomTF>false</publishOdomTF>

            <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
            <publishWheelJointState>true</publishWheelJointState>

            <!-- Set to true to swap right and left wheels, defaults to true -->
            <legacyMode>false</legacyMode>

            <robotNamespace>/</robotNamespace>
            <publishTf>true</publishTf>
            <rosDebugLevel>Info</rosDebugLevel>
        </plugin>
    </gazebo>
<!-- 
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
          <robotNamespace>$(arg robot_namespace)</robotNamespace>
          <legacyModeNS>true</legacyModeNS>
        </plugin>
      </gazebo> -->

    <!-- IMU -->
    <gazebo reference="imu_link">
        <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>200</update_rate>
            <visualize>$(arg imu_visual)</visualize>
            <topic>imu/filtered</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
                <topicName>imu/filtered</topicName>
                <bodyName>imu_link</bodyName>
                <updateRateHZ>200.0</updateRateHZ>
                <gaussianNoise>0.005</gaussianNoise>
                <xyzOffset>0 0 0</xyzOffset>
                <rpyOffset>0 0 0</rpyOffset>
                <frameName>imu_link</frameName>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
        </sensor>
    </gazebo>

    <!-- Laser Scan -->
    <gazebo reference="laser">
        <sensor type="ray" name="laser">
            <pose>0 0 0 0 0 0</pose>
            <visualize>$(arg laser_visual)</visualize>
            <update_rate>40</update_rate>
            <ray>
                <scan>
                    <horizontal>
                        <samples>720</samples>
                        <resolution>1</resolution>
                        <min_angle>-2.0944</min_angle>
                        <max_angle>2.0944</max_angle>
                    </horizontal>
                </scan>
                <range>
                    <min>0.2</min>
                    <max>8.0</max>
                    <resolution>0.01</resolution>
                </range>
                <noise>
                    <type>gaussian</type>
                    <mean>0.0</mean>
                    <stddev>0.001</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_laser" filename="libgazebo_ros_laser.so">
                <topicName>scan</topicName>
                <frameName>laser</frameName>
                <robotNamespace>/</robotNamespace>
            </plugin>
        </sensor>
        <material>Gazebo/Yellow</material>
    </gazebo>

</robot>